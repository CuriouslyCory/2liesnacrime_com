// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    //url      = "file:./db.sqlite"
    url      = env("DATABASE_URL")
}

model Example {
    id String @id @default(cuid())
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    isAdmin       Boolean @default(false)
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Episode {
    id              String    @id @default(cuid())
    slug            String    @unique
    seasonNumber    Int       @default(0)
    episodeNumber   Int       @default(0)
    title           String
    description     String
    tags            TagsOnEpisodes[]
    comments        Comment[]
    spotifyUrl      String      @default("")
    audioUrl        String      @default("")
    artworkUrl      String      @default("")
    duration        Int         @default(0)
    buzzsproutId    Int         @default(0)
    buzzsproutGuid  String      @default("")
    createdAt       DateTime      @default(now())
    updatedAt       DateTime      @default(now()) @updatedAt
}

model TagsOnEpisodes {
    episode     Episode @relation(fields: [episodeId], references: [id])
    episodeId   String
    tag         Tag @relation(fields: [tagId], references: [id])
    tagId       Int

    @@id([episodeId, tagId])
}

model Tag {
  id        Int         @id @default(autoincrement())
  name      String
  episodes   TagsOnEpisodes[]
}

model Comment {
  id        Int     @id @default(autoincrement())
  title     String
  content   String
  Episode   Episode? @relation(fields: [episodeId], references: [id])
  episodeId String
}